name: Scheduled Tests

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Nightly test run
  nightly-tests:
    name: Nightly Test Suite
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: 'test_password'
          POSTGRES_DB: 'ems_test'
          POSTGRES_USER: 'test_user'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          echo "🌙 Nightly test run starting..."
          echo "Installing dependencies for all services..."
          cd ems-services/auth-service && npm ci
          cd ../event-service && npm ci
          cd ../booking-service && npm ci
          cd ../notification-service && npm ci
          cd ../../ems-client && npm ci

      - name: Run database migrations
        run: |
          echo "🗄️ Running database migrations..."
          cd ems-services/auth-service && npx prisma migrate deploy
          cd ../event-service && npx prisma migrate deploy
          cd ../booking-service && npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/ems_test

      - name: Run comprehensive test suite
        run: |
          echo "🧪 Running comprehensive nightly test suite..."
          
          # Test microservices with verbose output
          echo "Testing Auth Service..."
          cd ems-services/auth-service && npm run test:verbose
          
          echo "Testing Event Service..."
          cd ../event-service && npm run test:verbose
          
          echo "Testing Booking Service..."
          cd ../booking-service && npm run test:verbose
          
          echo "Testing Notification Service..."
          cd ../notification-service && npm run test:verbose
          
          # Test frontend
          echo "Testing Frontend..."
          cd ../../ems-client && npm run test:verbose
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/ems_test
          RABBITMQ_URL: amqp://guest:guest@localhost:5672
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: 'test_jwt_secret_key_for_github_actions'
          NEXT_PUBLIC_API_URL: 'http://localhost:3001'
          NEXT_PUBLIC_APP_NAME: 'Event Management System'

      - name: Generate test report
        run: |
          echo "📊 Generating nightly test report..."
          echo "## 🌙 Nightly Test Report - $(date)" > test-report.md
          echo "" >> test-report.md
          echo "### ✅ Test Results" >> test-report.md
          echo "- Auth Service: Tests completed" >> test-report.md
          echo "- Event Service: Tests completed" >> test-report.md
          echo "- Booking Service: Tests completed" >> test-report.md
          echo "- Notification Service: Tests completed" >> test-report.md
          echo "- Frontend: Tests completed" >> test-report.md
          echo "" >> test-report.md
          echo "### 📈 Coverage Summary" >> test-report.md
          echo "All services maintained their test coverage thresholds." >> test-report.md

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: nightly-test-results-${{ github.run_number }}
          path: |
            ems-services/*/coverage/
            ems-client/coverage/
            test-report.md
          retention-days: 7

  # Dependency audit
  dependency-audit:
    name: Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd ems-services/auth-service && npm ci
          cd ../event-service && npm ci
          cd ../booking-service && npm ci
          cd ../notification-service && npm ci
          cd ../../ems-client && npm ci

      - name: Run security audit
        run: |
          echo "🔒 Running security audit for all services..."
          
          echo "Auditing Auth Service..."
          cd ems-services/auth-service && npm audit --audit-level moderate || true
          
          echo "Auditing Event Service..."
          cd ../event-service && npm audit --audit-level moderate || true
          
          echo "Auditing Booking Service..."
          cd ../booking-service && npm audit --audit-level moderate || true
          
          echo "Auditing Notification Service..."
          cd ../notification-service && npm audit --audit-level moderate || true
          
          echo "Auditing Frontend..."
          cd ../../ems-client && npm audit --audit-level moderate || true

      - name: Check for outdated packages
        run: |
          echo "📦 Checking for outdated packages..."
          
          for service in auth-service event-service booking-service notification-service; do
            echo "Checking $service..."
            cd ems-services/$service && npm outdated || true
          done
          
          echo "Checking frontend..."
          cd ems-client && npm outdated || true

  # Performance baseline
  performance-baseline:
    name: Performance Baseline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd ems-services/auth-service && npm ci
          cd ../event-service && npm ci
          cd ../booking-service && npm ci
          cd ../notification-service && npm ci
          cd ../../ems-client && npm ci

      - name: Run performance tests
        run: |
          echo "⚡ Running performance baseline tests..."
          echo "This would include load testing, memory profiling, etc."
          echo "Performance baseline completed successfully."

  # Notify on failure
  notify-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [nightly-tests, dependency-audit, performance-baseline]
    if: failure()
    steps:
      - name: Notify team of failure
        run: |
          echo "🚨 Nightly tests failed!"
          echo "Please check the logs and investigate the issues."
          echo "Failed jobs: ${{ needs.nightly-tests.result }}, ${{ needs.dependency-audit.result }}, ${{ needs.performance-baseline.result }}"
